{"cabal-version":"2.0","name":"ghc-bignum","version":"1.3","license":"BSD3","license-file":["LICENSE"],"license-files":["LICENSE"],"maintainer":"libraries@haskell.org","author":"Sylvain Henry","bug-reports":"https://gitlab.haskell.org/ghc/ghc/issues/new","synopsis":"GHC BigNum library","description":"This package provides the low-level implementation of the standard\n'BigNat', 'Natural' and 'Integer' types.","category":"Numeric, Algebra, GHC","build-type":"Configure","extra-source-files":["aclocal.m4","cbits/gmp_wrappers.c","changelog.md","configure","configure.ac","config.mk.in","include/WordSize.h","include/HsIntegerGmp.h.in","install-sh","ghc-bignum.buildinfo.in"],"source-repositories":{"head":{"type":"git","location":"https://gitlab.haskell.org/ghc/ghc.git","subdir":"libraries/ghc-bignum"}},"flags":{"native":{"description":"Enable native backend","default":false,"manual":true}},"components":{"lib":{"exposed-modules":["GHC.Num.Primitives","GHC.Num.WordArray","GHC.Num.BigNat","GHC.Num.Backend","GHC.Num.Backend.Selected","GHC.Num.Backend.Native","GHC.Num.Natural","GHC.Num.Integer"],"cpp-options":["-DBIGNUM_NATIVE",{"_if":{"flag":"gmp"},"_then":["-DBIGNUM_GMP"]},{"_if":{"flag":"ffi"},"_then":["-DBIGNUM_FFI"]},{"_if":{"flag":"check"},"_then":["-DBIGNUM_CHECK"]}],"cc-options":["-std=c99","-Wall"],"hs-source-dirs":["src/"],"default-language":"Haskell2010","other-extensions":["BangPatterns","CPP","ExplicitForAll","GHCForeignImportPrim","MagicHash","NegativeLiterals","NoImplicitPrelude","UnboxedTuples","UnliftedFFITypes","ForeignFunctionInterface"],"include-dirs":["include/"],"ghc-options":["-Wall","-this-unit-id","ghc-bignum","-fno-catch-nonexhaustive-cases"],"build-depends":[{"package":"ghc-prim","version":">=0.5.1.0 && <0.12","libs":["ghc-prim"]}],"buildable":[{"_if":{"or":[{"flag":"gmp"},{"flag":"ffi"}]},"_then":false},{"_if":{"and":[{"flag":"gmp"},{"flag":"ffi"}]},"_then":false}],"c-sources":[{"_if":{"flag":"gmp"},"_then":["cbits/gmp_wrappers.c"]}],"other-modules":[{"_if":{"flag":"gmp"},"_then":["GHC.Num.Backend.GMP"]},{"_if":{"flag":"ffi"},"_then":["GHC.Num.Backend.FFI"]},{"_if":{"flag":"check"},"_then":["GHC.Num.Backend.Check"]}]}}}