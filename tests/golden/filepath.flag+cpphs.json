{"cabal-version":"2.2","name":"filepath","version":"1.5.2.0","license":"BSD-3-Clause","license-file":["LICENSE"],"license-files":["LICENSE"],"copyright":"Neil Mitchell 2005-2020, Julian Ospald 2021-2022","maintainer":"Julian Ospald <hasufell@posteo.de>","author":"Neil Mitchell <ndmitchell@gmail.com>","tested-with":[["ghc","==8.6.5 || ==8.8.4 || ==8.10.7 || ==9.0.2 || ==9.2.8 || ==9.4.8 || ==9.6.3 || ==9.8.1"]],"homepage":"https://github.com/haskell/filepath/blob/master/README.md","bug-reports":"https://github.com/haskell/filepath/issues","synopsis":"Library for manipulating FilePaths in a cross platform way.","description":"This package provides functionality for manipulating @FilePath@ values, and is shipped with <https://www.haskell.org/ghc/ GHC>. It provides two variants for filepaths:\n\n1. legacy filepaths: @type FilePath = String@\n\n2. operating system abstracted filepaths (@OsPath@): internally unpinned @ShortByteString@ (platform-dependent encoding)\n\nIt is recommended to use @OsPath@ when possible, because it is more correct.\n\nFor each variant there are three main modules:\n\n* \"System.FilePath.Posix\" / \"System.OsPath.Posix\" manipulates POSIX\\/Linux style @FilePath@ values (with @\\/@ as the path separator).\n\n* \"System.FilePath.Windows\" / \"System.OsPath.Windows\" manipulates Windows style @FilePath@ values (with either @\\\\@ or @\\/@ as the path separator, and deals with drives).\n\n* \"System.FilePath\" / \"System.OsPath\" for dealing with current platform-specific filepaths\n\nFor more powerful string manipulation of @OsPath@, you can use the <https://hackage.haskell.org/package/os-string os-string package> (@OsPath@ is a type synonym for @OsString@).\n\nAn introduction into the new API can be found in this\n<https://hasufell.github.io/posts/2022-06-29-fixing-haskell-filepaths.html blog post>.\nCode examples for the new API can be found <https://github.com/hasufell/filepath-examples here>.","category":"System","build-type":"Simple","extra-source-files":["Generate.hs","Makefile","System/FilePath/Internal.hs","System/OsPath/Common.hs"],"extra-doc-files":["changelog.md","HACKING.md","README.md"],"source-repositories":{"head":{"type":"git","location":"https://github.com/haskell/filepath"}},"flags":{"cpphs":{"description":"Use cpphs (fixes haddock source links)","default":false,"manual":true}},"components":{"lib":{"exposed-modules":["System.FilePath","System.FilePath.Posix","System.FilePath.Windows","System.OsPath","System.OsPath.Encoding","System.OsPath.Internal","System.OsPath.Posix","System.OsPath.Posix.Internal","System.OsPath.Types","System.OsPath.Windows","System.OsPath.Windows.Internal"],"build-tool-depends":[{"package":"cpphs","version":">=0","exe":"cpphs"}],"default-language":"Haskell2010","other-extensions":["CPP","PatternGuards",{"_if":{"impl":"ghc","range":">=7.2"},"_then":["Safe"]}],"ghc-options":["-Wall","-pgmPcpphs","-optP--cpp"],"build-depends":[{"package":"base","version":">=4.12.0.0 && <4.21","libs":["base"]},{"package":"bytestring","version":">=0.11.3.0","libs":["bytestring"]},{"package":"deepseq","version":">=0","libs":["deepseq"]},{"package":"exceptions","version":">=0","libs":["exceptions"]},{"package":"template-haskell","version":">=0","libs":["template-haskell"]},{"package":"os-string","version":">=2.0.1","libs":["os-string"]}]},"test:filepath-tests":{"type":"exitcode-stdio-1.0","main-is":"Test.hs","hs-source-dirs":["tests","tests/filepath-tests"],"other-modules":["TestGen","TestUtil"],"default-language":"Haskell2010","ghc-options":["-Wall"],"build-depends":[{"package":"base","version":">=0","libs":["base"]},{"package":"bytestring","version":">=0.11.3.0","libs":["bytestring"]},{"package":"filepath","version":">=0","libs":["filepath"]},{"package":"os-string","version":">=2.0.1","libs":["os-string"]},{"package":"QuickCheck","version":">=2.7 && <2.15","libs":["QuickCheck"]}]},"test:filepath-equivalent-tests":{"type":"exitcode-stdio-1.0","main-is":"TestEquiv.hs","hs-source-dirs":["tests","tests/filepath-equivalent-tests"],"other-modules":["Legacy.System.FilePath","Legacy.System.FilePath.Posix","Legacy.System.FilePath.Windows","TestUtil"],"default-language":"Haskell2010","ghc-options":["-Wall"],"build-depends":[{"package":"base","version":">=0","libs":["base"]},{"package":"bytestring","version":">=0.11.3.0","libs":["bytestring"]},{"package":"filepath","version":">=0","libs":["filepath"]},{"package":"generic-random","version":">=0","libs":["generic-random"]},{"package":"generic-deriving","version":">=0","libs":["generic-deriving"]},{"package":"os-string","version":">=2.0.1","libs":["os-string"]},{"package":"QuickCheck","version":">=2.7 && <2.15","libs":["QuickCheck"]},{"package":"tasty","version":">=0","libs":["tasty"]},{"package":"tasty-quickcheck","version":">=0","libs":["tasty-quickcheck"]}]},"test:abstract-filepath":{"type":"exitcode-stdio-1.0","main-is":"Test.hs","hs-source-dirs":["tests","tests/abstract-filepath"],"other-modules":["Arbitrary","OsPathSpec","TestUtil"],"default-language":"Haskell2010","ghc-options":["-Wall"],"build-depends":[{"package":"base","version":">=0","libs":["base"]},{"package":"bytestring","version":">=0.11.3.0","libs":["bytestring"]},{"package":"deepseq","version":">=0","libs":["deepseq"]},{"package":"filepath","version":">=0","libs":["filepath"]},{"package":"os-string","version":">=2.0.1","libs":["os-string"]},{"package":"QuickCheck","version":">=2.7 && <2.15","libs":["QuickCheck"]},{"package":"quickcheck-classes-base","version":"^>=0.6.2","libs":["quickcheck-classes-base"]}]},"bench:bench-filepath":{"type":"exitcode-stdio-1.0","main-is":"BenchFilePath.hs","hs-source-dirs":["bench"],"default-language":"Haskell2010","ghc-options":["-Wall","-with-rtsopts=-A32m"],"build-depends":[{"package":"base","version":">=0","libs":["base"]},{"package":"bytestring","version":">=0.11.3.0","libs":["bytestring"]},{"package":"deepseq","version":">=0","libs":["deepseq"]},{"package":"filepath","version":">=0","libs":["filepath"]},{"package":"os-string","version":">=2.0.1","libs":["os-string"]},{"package":"tasty-bench","version":">=0","libs":["tasty-bench"]}]}}}